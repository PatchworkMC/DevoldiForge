--- a/net/minecraft/container/EnchantingTableContainer.java
+++ b/net/minecraft/container/EnchantingTableContainer.java
@@ -55,7 +55,7 @@
       });
       this.addSlot(new Slot(this.inventory, 1, 35, 47) {
          public boolean canInsert(ItemStack stack) {
-            return stack.getItem() == Items.LAPIS_LAZULI;
+            return net.minecraftforge.common.Tags.Items.GEMS_LAPIS.contains(stack.getItem());
          }
       });
 
@@ -81,40 +81,28 @@
       this.addProperty(Property.create(this.enchantmentLevel, 2));
    }
 
+   private float getPower(net.minecraft.world.World world, net.minecraft.util.math.BlockPos pos) {
+      return world.getBlockState(pos).getEnchantPowerBonus(world, pos);
+   }
+
    public void onContentChanged(Inventory inventoryIn) {
       if (inventoryIn == this.inventory) {
          ItemStack itemstack = inventoryIn.getInvStack(0);
          if (!itemstack.isEmpty() && itemstack.isEnchantable()) {
             this.context.run((p_217002_2_, p_217002_3_) -> {
-               int j = 0;
+               float power = 0;
 
                for(int k = -1; k <= 1; ++k) {
                   for(int l = -1; l <= 1; ++l) {
                      if ((k != 0 || l != 0) && p_217002_2_.isAir(p_217002_3_.add(l, 0, k)) && p_217002_2_.isAir(p_217002_3_.add(l, 1, k))) {
-                        if (p_217002_2_.getBlockState(p_217002_3_.add(l * 2, 0, k * 2)).getBlock() == Blocks.BOOKSHELF) {
-                           ++j;
-                        }
+                        power += getPower(p_217002_2_, p_217002_3_.add(l * 2, 0, k * 2));
+                        power += getPower(p_217002_2_, p_217002_3_.add(l * 2, 1, k * 2));
 
-                        if (p_217002_2_.getBlockState(p_217002_3_.add(l * 2, 1, k * 2)).getBlock() == Blocks.BOOKSHELF) {
-                           ++j;
-                        }
-
                         if (l != 0 && k != 0) {
-                           if (p_217002_2_.getBlockState(p_217002_3_.add(l * 2, 0, k)).getBlock() == Blocks.BOOKSHELF) {
-                              ++j;
-                           }
-
-                           if (p_217002_2_.getBlockState(p_217002_3_.add(l * 2, 1, k)).getBlock() == Blocks.BOOKSHELF) {
-                              ++j;
-                           }
-
-                           if (p_217002_2_.getBlockState(p_217002_3_.add(l, 0, k * 2)).getBlock() == Blocks.BOOKSHELF) {
-                              ++j;
-                           }
-
-                           if (p_217002_2_.getBlockState(p_217002_3_.add(l, 1, k * 2)).getBlock() == Blocks.BOOKSHELF) {
-                              ++j;
-                           }
+                           power += getPower(p_217002_2_, p_217002_3_.add(l * 2, 0, k));
+                           power += getPower(p_217002_2_, p_217002_3_.add(l * 2, 1, k));
+                           power += getPower(p_217002_2_, p_217002_3_.add(l, 0, k * 2));
+                           power += getPower(p_217002_2_, p_217002_3_.add(l, 1, k * 2));
                         }
                      }
                   }
@@ -123,12 +111,13 @@
                this.random.setSeed((long)this.seed.get());
 
                for(int i1 = 0; i1 < 3; ++i1) {
-                  this.enchantmentPower[i1] = EnchantmentHelper.calculateEnchantmentPower(this.random, i1, j, itemstack);
+                  this.enchantmentPower[i1] = EnchantmentHelper.calculateEnchantmentPower(this.random, i1, (int)power, itemstack);
                   this.enchantmentId[i1] = -1;
                   this.enchantmentLevel[i1] = -1;
                   if (this.enchantmentPower[i1] < i1 + 1) {
                      this.enchantmentPower[i1] = 0;
                   }
+                  this.enchantmentPower[i1] = net.minecraftforge.event.ForgeEventFactory.onEnchantmentLevelSet(p_217002_2_, p_217002_3_, i1, (int)power, itemstack, enchantmentPower[i1]);
                }
 
                for(int j1 = 0; j1 < 3; ++j1) {
@@ -262,9 +251,8 @@
                return ItemStack.EMPTY;
             }
 
-            if (itemstack1.hasTag() && itemstack1.getCount() == 1) {
-               this.slots.get(0).setStack(itemstack1.copy());
-               itemstack1.setCount(0);
+            if (itemstack1.hasTag()) { // Forge: Fix MC-17431
+               ((Slot)this.slots.get(0)).setStack(itemstack1.split(1));
             } else if (!itemstack1.isEmpty()) {
                this.slots.get(0).setStack(new ItemStack(itemstack1.getItem()));
                itemstack1.decrement(1);
