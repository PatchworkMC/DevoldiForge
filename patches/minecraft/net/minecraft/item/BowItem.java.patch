--- a/net/minecraft/item/BowItem.java
+++ b/net/minecraft/item/BowItem.java
@@ -22,7 +22,7 @@
          if (p_210310_2_ == null) {
             return 0.0F;
          } else {
-            return p_210310_2_.getActiveItem().getItem() != Items.BOW ? 0.0F : (float)(p_210310_0_.getMaxUseTime() - p_210310_2_.getItemUseTimeLeft()) / 20.0F;
+            return !(p_210310_2_.getActiveItem().getItem() instanceof BowItem) ? 0.0F : (float)(p_210310_0_.getMaxUseTime() - p_210310_2_.getItemUseTimeLeft()) / 20.0F;
          }
       });
       this.addPropertyGetter(new Identifier("pulling"), (p_210309_0_, p_210309_1_, p_210309_2_) -> {
@@ -35,18 +35,23 @@
          PlayerEntity playerentity = (PlayerEntity)entityLiving;
          boolean flag = playerentity.abilities.creativeMode || EnchantmentHelper.getLevel(Enchantments.INFINITY, stack) > 0;
          ItemStack itemstack = playerentity.getArrowType(stack);
+
+         int i = this.getMaxUseTime(stack) - timeLeft;
+         i = net.minecraftforge.event.ForgeEventFactory.onArrowLoose(stack, worldIn, playerentity, i, !itemstack.isEmpty() || flag);
+         if (i < 0) return;
+
          if (!itemstack.isEmpty() || flag) {
             if (itemstack.isEmpty()) {
                itemstack = new ItemStack(Items.ARROW);
             }
 
-            int i = this.getMaxUseTime(stack) - timeLeft;
             float f = getPullProgress(i);
             if (!((double)f < 0.1D)) {
-               boolean flag1 = flag && itemstack.getItem() == Items.ARROW;
+               boolean flag1 = playerentity.abilities.creativeMode || (itemstack.getItem() instanceof ArrowItem && ((ArrowItem)itemstack.getItem()).isInfinite(itemstack, stack, playerentity));
                if (!worldIn.isClient) {
                   ArrowItem arrowitem = (ArrowItem)(itemstack.getItem() instanceof ArrowItem ? itemstack.getItem() : Items.ARROW);
                   ProjectileEntity abstractarrowentity = arrowitem.createArrow(worldIn, itemstack, playerentity);
+                  abstractarrowentity = customeArrow(abstractarrowentity);
                   abstractarrowentity.setProperties(playerentity, playerentity.pitch, playerentity.yaw, 0.0F, f * 3.0F, 1.0F);
                   if (f == 1.0F) {
                      abstractarrowentity.setCritical(true);
@@ -111,6 +116,10 @@
    public TypedActionResult<ItemStack> use(World worldIn, PlayerEntity playerIn, Hand handIn) {
       ItemStack itemstack = playerIn.getStackInHand(handIn);
       boolean flag = !playerIn.getArrowType(itemstack).isEmpty();
+
+      TypedActionResult<ItemStack> ret = net.minecraftforge.event.ForgeEventFactory.onArrowNock(itemstack, worldIn, playerIn, handIn, flag);
+      if (ret != null) return ret;
+
       if (!playerIn.abilities.creativeMode && !flag) {
          return TypedActionResult.fail(itemstack);
       } else {
@@ -122,4 +131,8 @@
    public Predicate<ItemStack> getProjectiles() {
       return BOW_PROJECTILES;
    }
+
+   public ProjectileEntity customeArrow(ProjectileEntity arrow) {
+      return arrow;
+   }
 }
