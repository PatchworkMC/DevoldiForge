--- a/net/minecraft/block/StairsBlock.java
+++ b/net/minecraft/block/StairsBlock.java
@@ -85,13 +85,24 @@
       return voxelshape;
    }
 
+   // Forge: Use the other constructor that takes a Supplier
+   @Deprecated
    protected StairsBlock(BlockState state, Block.Settings properties) {
       super(properties);
       this.setDefaultState(this.stateManager.getDefaultState().with(FACING, Direction.NORTH).with(HALF, BlockHalf.BOTTOM).with(SHAPE, StairShape.STRAIGHT).with(WATERLOGGED, Boolean.valueOf(false)));
       this.baseBlock = state.getBlock();
       this.baseBlockState = state;
+      this.stateSupplier = () -> state;
    }
 
+   public StairsBlock(java.util.function.Supplier<BlockState> state, Block.Settings properties) {
+      super(properties);
+      this.setDefaultState(this.stateManager.getDefaultState().with(FACING, Direction.NORTH).with(HALF, BlockHalf.BOTTOM).with(SHAPE, StairShape.STRAIGHT).with(WATERLOGGED, Boolean.valueOf(false)));
+      this.baseBlock = Blocks.AIR; // These are unused, fields are redirected
+      this.baseBlockState = Blocks.AIR.getDefaultState();
+      this.stateSupplier = state;
+   }
+
    public boolean hasSidedTransparency(BlockState state) {
       return true;
    }
@@ -263,4 +274,12 @@
    public boolean canPlaceAtSide(BlockState state, BlockView worldIn, BlockPos pos, BlockPlacementEnvironment type) {
       return false;
    }
+
+   private final java.util.function.Supplier<BlockState> stateSupplier;
+   private Block getModelBlock() {
+       return getModelState().getBlock();
+   }
+   private BlockState getModelState() {
+       return stateSupplier.get();
+   }
 }
