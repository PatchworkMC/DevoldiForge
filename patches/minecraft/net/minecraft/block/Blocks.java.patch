--- a/net/minecraft/block/Blocks.java
+++ b/net/minecraft/block/Blocks.java
@@ -14,6 +14,7 @@
 import net.minecraft.util.SignType;
 import net.minecraft.util.registry.Registry;
 
+@net.minecraftforge.registries.ObjectHolder("minecraft")
 public class Blocks {
    public static final Block AIR = register("air", new AirBlock(Block.Settings.of(Material.AIR).noCollision().dropsNothing()));
    public static final Block STONE = register("stone", new Block(Block.Settings.of(Material.STONE, MaterialColor.STONE).strength(1.5F, 6.0F)));
@@ -105,7 +106,7 @@
    public static final Block GREEN_BED = register("green_bed", new BedBlock(DyeColor.GREEN, Block.Settings.of(Material.WOOL).sounds(BlockSoundGroup.WOOD).strength(0.2F).nonOpaque()));
    public static final Block RED_BED = register("red_bed", new BedBlock(DyeColor.RED, Block.Settings.of(Material.WOOL).sounds(BlockSoundGroup.WOOD).strength(0.2F).nonOpaque()));
    public static final Block BLACK_BED = register("black_bed", new BedBlock(DyeColor.BLACK, Block.Settings.of(Material.WOOL).sounds(BlockSoundGroup.WOOD).strength(0.2F).nonOpaque()));
-   public static final Block POWERED_RAIL = register("powered_rail", new PoweredRailBlock(Block.Settings.of(Material.SUPPORTED).noCollision().strength(0.7F).sounds(BlockSoundGroup.METAL)));
+   public static final Block POWERED_RAIL = register("powered_rail", new PoweredRailBlock(Block.Settings.of(Material.SUPPORTED).noCollision().strength(0.7F).sounds(BlockSoundGroup.METAL), true));
    public static final Block DETECTOR_RAIL = register("detector_rail", new DetectorRailBlock(Block.Settings.of(Material.SUPPORTED).noCollision().strength(0.7F).sounds(BlockSoundGroup.METAL)));
    public static final Block STICKY_PISTON = register("sticky_piston", new PistonBlock(true, Block.Settings.of(Material.PISTON).strength(0.5F)));
    public static final Block COBWEB = register("cobweb", new CobwebBlock(Block.Settings.of(Material.COBWEB).noCollision().strength(4.0F)));
@@ -701,16 +702,4 @@
    private static Block register(String key, Block blockIn) {
       return Registry.register(Registry.BLOCK, key, blockIn);
    }
-
-   static {
-      for(Block block : Registry.BLOCK) {
-         for(BlockState blockstate : block.getStateManager().getStates()) {
-            blockstate.initShapeCache();
-            Block.STATE_IDS.add(blockstate);
-         }
-
-         block.getDropTableId();
-      }
-
-   }
 }
