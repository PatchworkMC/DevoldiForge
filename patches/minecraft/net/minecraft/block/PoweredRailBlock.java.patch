--- a/net/minecraft/block/PoweredRailBlock.java
+++ b/net/minecraft/block/PoweredRailBlock.java
@@ -14,10 +14,16 @@
 public class PoweredRailBlock extends AbstractRailBlock {
    public static final EnumProperty<RailShape> SHAPE = Properties.STRAIGHT_RAIL_SHAPE;
    public static final BooleanProperty POWERED = Properties.POWERED;
+   private final boolean isActivator;  // TRUE for an Activator Rail, FALSE for Powered Rail
 
    protected PoweredRailBlock(Block.Settings builder) {
+      this(builder, false);
+   }
+
+   protected PoweredRailBlock(Block.Settings builder, boolean isPoweredRail) {
       super(true, builder);
       this.setDefaultState(this.stateManager.getDefaultState().with(SHAPE, RailShape.NORTH_SOUTH).with(POWERED, Boolean.valueOf(false)));
+      this.isActivator = !isPoweredRail;
    }
 
    protected boolean isPoweredByOtherRails(World worldIn, BlockPos pos, BlockState state, boolean p_176566_4_, int p_176566_5_) {
@@ -99,13 +105,13 @@
 
    protected boolean isPoweredByOtherRails(World p_208071_1_, BlockPos p_208071_2_, boolean p_208071_3_, int p_208071_4_, RailShape p_208071_5_) {
       BlockState blockstate = p_208071_1_.getBlockState(p_208071_2_);
-      if (blockstate.getBlock() != this) {
+      if (!(blockstate.getBlock() instanceof PoweredRailBlock)) {
          return false;
       } else {
-         RailShape railshape = blockstate.get(SHAPE);
+         RailShape railshape = getRailDirection(blockstate, p_208071_1_, p_208071_2_, null);
          if (p_208071_5_ != RailShape.EAST_WEST || railshape != RailShape.NORTH_SOUTH && railshape != RailShape.ASCENDING_NORTH && railshape != RailShape.ASCENDING_SOUTH) {
             if (p_208071_5_ != RailShape.NORTH_SOUTH || railshape != RailShape.EAST_WEST && railshape != RailShape.ASCENDING_EAST && railshape != RailShape.ASCENDING_WEST) {
-               if (blockstate.get(POWERED)) {
+               if (isActivator == ((PoweredRailBlock)blockstate.getBlock()).isActivator) {
                   return p_208071_1_.isReceivingRedstonePower(p_208071_2_) ? true : this.isPoweredByOtherRails(p_208071_1_, p_208071_2_, blockstate, p_208071_3_, p_208071_4_ + 1);
                } else {
                   return false;
@@ -255,4 +261,8 @@
    protected void appendProperties(StateManager.Builder<Block, BlockState> builder) {
       builder.add(SHAPE, POWERED);
    }
+
+   public boolean isActivatorRail() {
+      return isActivator;
+   }
 }
