--- a/net/minecraft/entity/boss/WitherEntity.java
+++ b/net/minecraft/entity/boss/WitherEntity.java
@@ -211,7 +211,7 @@
       if (this.getInvulnerableTimer() > 0) {
          int j1 = this.getInvulnerableTimer() - 1;
          if (j1 <= 0) {
-            Explosion.DestructionType explosion$mode = this.world.getGameRules().getBoolean(GameRules.MOB_GRIEFING) ? Explosion.DestructionType.DESTROY : Explosion.DestructionType.NONE;
+            Explosion.DestructionType explosion$mode = net.minecraftforge.event.ForgeEventFactory.getMobGriefingEvent(this.world, this) ? Explosion.DestructionType.DESTROY : Explosion.DestructionType.NONE;
             this.world.createExplosion(this, this.getX(), this.getEyeY(), this.getZ(), 7.0F, false, explosion$mode);
             this.world.playGlobalEvent(1023, new BlockPos(this), 0);
          }
@@ -286,7 +286,7 @@
 
          if (this.field_7082 > 0) {
             --this.field_7082;
-            if (this.field_7082 == 0 && this.world.getGameRules().getBoolean(GameRules.MOB_GRIEFING)) {
+            if (this.field_7082 == 0 && net.minecraftforge.event.ForgeEventFactory.getMobGriefingEvent(this.world, this)) {
                int i1 = MathHelper.floor(this.getY());
                int l1 = MathHelper.floor(this.getX());
                int i2 = MathHelper.floor(this.getZ());
@@ -300,7 +300,7 @@
                         int l = i2 + l2;
                         BlockPos blockpos = new BlockPos(i3, k, l);
                         BlockState blockstate = this.world.getBlockState(blockpos);
-                        if (canDestroy(blockstate)) {
+                        if (blockstate.canEntityDestroy(this.world, blockpos, this) && net.minecraftforge.event.ForgeEventFactory.onEntityDestroyBlock(this, blockpos, blockstate)) {
                            flag = this.world.breakBlock(blockpos, true, this) || flag;
                         }
                      }
@@ -321,6 +321,7 @@
       }
    }
 
+   @Deprecated //Forge: DO NOT USE use BlockState.canEntityDestroy
    public static boolean canDestroy(BlockState blockIn) {
       return !blockIn.isAir() && !BlockTags.WITHER_IMMUNE.contains(blockIn.getBlock());
    }
