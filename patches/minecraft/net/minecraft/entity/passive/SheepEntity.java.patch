--- a/net/minecraft/entity/passive/SheepEntity.java
+++ b/net/minecraft/entity/passive/SheepEntity.java
@@ -55,7 +55,7 @@
 import net.minecraftforge.api.distmarker.Dist;
 import net.minecraftforge.api.distmarker.OnlyIn;
 
-public class SheepEntity extends AnimalEntity {
+public class SheepEntity extends AnimalEntity implements net.minecraftforge.common.IShearable {
    private static final TrackedData<Byte> COLOR = DataTracker.registerData(SheepEntity.class, TrackedDataHandlerRegistry.BYTE);
    private static final Map<DyeColor, ItemConvertible> DROPS = Util.make(Maps.newEnumMap(DyeColor.class), (p_203402_0_) -> {
       p_203402_0_.put(DyeColor.WHITE, Blocks.WHITE_WOOL);
@@ -212,7 +212,7 @@
 
    public boolean interactMob(PlayerEntity player, Hand hand) {
       ItemStack itemstack = player.getStackInHand(hand);
-      if (itemstack.getItem() == Items.SHEARS && !this.isSheared() && !this.isBaby()) {
+      if (false && itemstack.getItem() == Items.SHEARS && !this.isSheared() && !this.isBaby()) { //Forge: Moved to onSheared
          this.dropItems();
          if (!this.world.isClient) {
             itemstack.damage(1, player, (p_213613_1_) -> {
@@ -226,6 +226,7 @@
       }
    }
 
+   @Deprecated //Forge: Use Shearable interface
    public void dropItems() {
       if (!this.world.isClient) {
          this.setSheared(true);
@@ -354,4 +355,24 @@
    protected float getActiveEyeHeight(EntityPose poseIn, EntityDimensions sizeIn) {
       return 0.95F * sizeIn.height;
    }
+
+   @Override
+   public boolean isShearable(ItemStack item, net.minecraft.world.WorldView world, BlockPos pos) {
+      return !this.isSheared() && !this.isBaby();
+   }
+
+   @Override
+   public java.util.List<ItemStack> onSheared(ItemStack item, net.minecraft.world.IWorld world, BlockPos pos, int fortune) {
+      java.util.List<ItemStack> ret = new java.util.ArrayList<>();
+      if (!this.world.isClient) {
+         this.setSheared(true);
+         int i = 1 + this.random.nextInt(3);
+
+         for(int j = 0; j < i; ++j) {
+            ret.add(new ItemStack(DROPS.get(this.getColor())));
+         }
+      }
+      this.playSound(SoundEvents.ENTITY_SHEEP_SHEAR, 1.0F, 1.0F);
+      return ret;
+   }
 }
