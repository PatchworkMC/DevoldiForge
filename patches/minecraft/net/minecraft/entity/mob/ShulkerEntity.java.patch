--- a/net/minecraft/entity/mob/ShulkerEntity.java
+++ b/net/minecraft/entity/mob/ShulkerEntity.java
@@ -184,7 +184,7 @@
          this.field_7340 = 0;
       } else if (!this.world.isClient) {
          BlockState blockstate = this.world.getBlockState(blockpos);
-         if (!blockstate.isAir()) {
+         if (!blockstate.isAir(this.world, blockpos)) {
             if (blockstate.getBlock() == Blocks.MOVING_PISTON) {
                Direction direction = blockstate.get(PistonBlock.FACING);
                if (this.world.isAir(blockpos.offset(direction))) {
@@ -250,6 +250,7 @@
          this.resetPosition((double)blockpos.getX() + 0.5D, (double)blockpos.getY(), (double)blockpos.getZ() + 0.5D);
          double d0 = 0.5D - (double)MathHelper.sin((0.5F + this.field_7337) * (float)Math.PI) * 0.5D;
          double d1 = 0.5D - (double)MathHelper.sin((0.5F + this.field_7339) * (float)Math.PI) * 0.5D;
+         if (this.isAddedToWorld() && this.world instanceof net.minecraft.server.world.ServerWorld) ((net.minecraft.server.world.ServerWorld)this.world).checkChunk(this); // Forge - Process chunk registration after moving.
          Direction direction3 = this.getAttachedFace().getOpposite();
          this.setBoundingBox((new Box(this.getX() - 0.5D, this.getY(), this.getZ() - 0.5D, this.getX() + 0.5D, this.getY() + 1.0D, this.getZ() + 0.5D)).stretch((double)direction3.getOffsetX() * d0, (double)direction3.getOffsetY() * d0, (double)direction3.getOffsetZ() * d0));
          double d2 = d0 - d1;
@@ -308,6 +309,12 @@
                }
 
                if (flag) {
+                  net.minecraftforge.event.entity.living.EnderTeleportEvent event = new net.minecraftforge.event.entity.living.EnderTeleportEvent(this, blockpos1.getX(), blockpos1.getY(), blockpos1.getZ(), 0);
+                  if (net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(event)) flag = false;
+                  blockpos1 = new BlockPos(event.getTargetX(), event.getTargetY(), event.getTargetZ());
+               }
+
+               if (flag) {
                   this.playSound(SoundEvents.ENTITY_SHULKER_TELEPORT, 1.0F, 1.0F);
                   this.dataTracker.set(ATTACHED_BLOCK, Optional.of(blockpos1));
                   this.dataTracker.set(PEEK_AMOUNT, (byte)0);
