--- a/net/minecraft/client/world/ClientWorld.java
+++ b/net/minecraft/client/world/ClientWorld.java
@@ -102,6 +102,8 @@
       this.setSpawnPos(new BlockPos(8, 64, 8));
       this.calculateAmbientDarkness();
       this.initWeatherGradients();
+      this.gatherCapabilities(dimension.initCapabilities());
+      net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.WorldEvent.Load(this));
    }
 
    public void tick(BooleanSupplier hasTimeLeft) {
@@ -126,6 +128,7 @@
          Entity entity = this.globalEntities.get(i);
          this.tickEntity((p_228325_0_) -> {
             ++p_228325_0_.age;
+            if (p_228325_0_.canUpdate())
             p_228325_0_.tick();
          }, entity);
          if (entity.removed) {
@@ -171,6 +174,7 @@
             this.getProfiler().push(() -> {
                return Registry.ENTITY_TYPE.getId(entityIn.getType()).toString();
             });
+            if (entityIn.canUpdate())
             entityIn.tick();
             this.getProfiler().pop();
          }
@@ -288,9 +292,11 @@
    }
 
    private void addEntityPrivate(int entityIdIn, Entity entityToSpawn) {
+      if (net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.EntityJoinWorldEvent(entityToSpawn, this))) return;
       this.removeEntity(entityIdIn);
       this.regularEntities.put(entityIdIn, entityToSpawn);
       this.getChunkManager().getChunk(MathHelper.floor(entityToSpawn.getX() / 16.0D), MathHelper.floor(entityToSpawn.getZ() / 16.0D), ChunkStatus.FULL, true).addEntity(entityToSpawn);
+      entityToSpawn.onAddedToWorld();
    }
 
    public void removeEntity(int eid) {
@@ -309,6 +315,7 @@
       }
 
       this.players.remove(entityIn);
+      entityIn.onRemovedFromWorld();
    }
 
    public void addEntitiesToChunk(WorldChunk chunkIn) {
@@ -442,6 +449,11 @@
    }
 
    public void playSound(@Nullable PlayerEntity player, double x, double y, double z, SoundEvent soundIn, SoundCategory category, float volume, float pitch) {
+      net.minecraftforge.event.entity.PlaySoundAtEntityEvent event = net.minecraftforge.event.ForgeEventFactory.onPlaySoundAtEntity(player, soundIn, category, volume, pitch);
+      if (event.isCanceled() || event.getSound() == null) return;
+      soundIn = event.getSound();
+      category = event.getCategory();
+      volume = event.getVolume();
       if (player == this.client.player) {
          this.playSound(x, y, z, soundIn, category, volume, pitch, false);
       }
@@ -449,6 +461,11 @@
    }
 
    public void playSoundFromEntity(@Nullable PlayerEntity playerIn, Entity entityIn, SoundEvent eventIn, SoundCategory categoryIn, float volume, float pitch) {
+      net.minecraftforge.event.entity.PlaySoundAtEntityEvent event = net.minecraftforge.event.ForgeEventFactory.onPlaySoundAtEntity(playerIn, eventIn, categoryIn, volume, pitch);
+      if (event.isCanceled() || event.getSound() == null) return;
+      eventIn = event.getSound();
+      categoryIn = event.getCategory();
+      volume = event.getVolume();
       if (playerIn == this.client.player) {
          this.client.getSoundManager().play(new EntityTrackingSoundInstance(eventIn, categoryIn, entityIn));
       }
