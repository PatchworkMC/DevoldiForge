--- a/net/minecraft/world/dimension/Dimension.java
+++ b/net/minecraft/world/dimension/Dimension.java
@@ -10,11 +10,10 @@
 import net.minecraft.world.World;
 import net.minecraft.world.border.WorldBorder;
 import net.minecraft.world.gen.chunk.ChunkGenerator;
-import net.minecraft.world.level.LevelGeneratorType;
 import net.minecraftforge.api.distmarker.Dist;
 import net.minecraftforge.api.distmarker.OnlyIn;
 
-public abstract class Dimension {
+public abstract class Dimension implements net.minecraftforge.common.extensions.IForgeDimension {
    public static final float[] MOON_PHASE_TO_SIZE = new float[]{1.0F, 0.75F, 0.5F, 0.25F, 0.0F, 0.25F, 0.5F, 0.75F};
    protected final World world;
    private final DimensionType type;
@@ -61,7 +60,7 @@
 
    @Environment(EnvType.CLIENT)
    public float getCloudHeight() {
-      return 128.0F;
+      return this.getWorld().getLevelProperties().getGeneratorType().getCloudHeight();
    }
 
    @Environment(EnvType.CLIENT)
@@ -76,7 +75,7 @@
 
    @Environment(EnvType.CLIENT)
    public double getHorizonShadingRatio() {
-      return this.world.getLevelProperties().getGeneratorType() == LevelGeneratorType.FLAT ? 1.0D : 0.03125D;
+      return this.world.getLevelProperties().getGeneratorType().voidFadeMagnitude();
    }
 
    public boolean doesWaterVaporize() {
@@ -105,6 +104,7 @@
    public void update() {
    }
 
+   @Deprecated //Forge: Use WorldType.createChunkGenerator
    public abstract ChunkGenerator<?> createChunkGenerator();
 
    @Nullable
@@ -125,5 +125,64 @@
    @Environment(EnvType.CLIENT)
    public abstract boolean isFogThick(int x, int z);
 
-   public abstract DimensionType getType();
+   public DimensionType getType() {
+       return this.type;
+   }
+
+   /*======================================= Forge Start =========================================*/
+   private net.minecraftforge.client.IRenderHandler skyRenderer = null;
+   private net.minecraftforge.client.IRenderHandler cloudRenderer = null;
+   private net.minecraftforge.client.IRenderHandler weatherRenderer = null;
+
+   @Nullable
+   @Environment(EnvType.CLIENT)
+   @Override
+   public net.minecraftforge.client.IRenderHandler getSkyRenderer() {
+      return this.skyRenderer;
+   }
+
+   @Environment(EnvType.CLIENT)
+   @Override
+   public void setSkyRenderer(net.minecraftforge.client.IRenderHandler skyRenderer) {
+      this.skyRenderer = skyRenderer;
+   }
+
+   @Nullable
+   @Environment(EnvType.CLIENT)
+   @Override
+   public net.minecraftforge.client.IRenderHandler getCloudRenderer() {
+      return cloudRenderer;
+   }
+
+   @Environment(EnvType.CLIENT)
+   @Override
+   public void setCloudRenderer(net.minecraftforge.client.IRenderHandler renderer) {
+      cloudRenderer = renderer;
+   }
+
+   @Nullable
+   @Environment(EnvType.CLIENT)
+   @Override
+   public net.minecraftforge.client.IRenderHandler getWeatherRenderer() {
+      return weatherRenderer;
+   }
+
+   @Environment(EnvType.CLIENT)
+   @Override
+   public void setWeatherRenderer(net.minecraftforge.client.IRenderHandler renderer) {
+      weatherRenderer = renderer;
+   }
+
+   @Override
+   public void resetRainAndThunder() {
+      world.getLevelProperties().setRainTime(0);
+      world.getLevelProperties().setRaining(false);
+      world.getLevelProperties().setThunderTime(0);
+      world.getLevelProperties().setThundering(false);
+   }
+
+   @Override
+   public World getWorld() {
+      return this.world;
+   }
 }
