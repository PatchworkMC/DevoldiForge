--- a/net/minecraft/world/chunk/PalettedContainer.java
+++ b/net/minecraft/world/chunk/PalettedContainer.java
@@ -67,6 +67,9 @@
    }
 
    private void setPaletteSize(int bitsIn) {
+      setBits(bitsIn, false);
+   }
+   private void setBits(int bitsIn, boolean forceBits) {
       if (bitsIn != this.paletteSize) {
          this.paletteSize = bitsIn;
          if (this.paletteSize <= 4) {
@@ -77,6 +80,8 @@
          } else {
             this.palette = this.fallbackPalette;
             this.paletteSize = MathHelper.log2DeBruijn(this.idList.size());
+            if (forceBits)
+               this.paletteSize = bitsIn;
          }
 
          this.palette.getIndex(this.field_12935);
@@ -139,12 +144,16 @@
       this.lock();
       int i = buf.readByte();
       if (this.paletteSize != i) {
-         this.setPaletteSize(i);
+         this.setBits(i, true); //Forge, Force bit density to fix network issues, resize below if needed.
       }
 
       this.palette.fromPacket(buf);
       buf.readLongArray(this.data.getStorage());
       this.unlock();
+
+      int regSize = MathHelper.log2DeBruijn(this.idList.size());
+      if (this.palette == fallbackPalette && this.paletteSize != regSize) // Resize bits to fit registry.
+         this.onResize(regSize, field_12935);
    }
 
    public void toPacket(PacketByteBuf buf) {
