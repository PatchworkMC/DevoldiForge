--- a/net/minecraft/world/gen/feature/TreeFeatureConfig.java
+++ b/net/minecraft/world/gen/feature/TreeFeatureConfig.java
@@ -17,6 +17,7 @@
    public final List<TreeDecorator> decorators;
    public final int baseHeight;
    public transient boolean field_21593;
+   protected net.minecraftforge.common.IPlantable sapling = (net.minecraftforge.common.IPlantable)net.minecraft.block.Blocks.OAK_SAPLING;
 
    protected TreeFeatureConfig(BlockStateProvider trunkProviderIn, BlockStateProvider leavesProviderIn, List<TreeDecorator> decoratorsIn, int baseHeightIn) {
       this.trunkProvider = trunkProviderIn;
@@ -37,6 +38,15 @@
       return new Dynamic<>(ops, ops.createMap(builder.build()));
    }
 
+   protected TreeFeatureConfig setSapling(net.minecraftforge.common.IPlantable value) {
+      this.sapling = value;
+      return this;
+   }
+
+   public net.minecraftforge.common.IPlantable getSapling() {
+       return this.sapling;
+   }
+
    public static <T> TreeFeatureConfig deserialize(Dynamic<T> data) {
       BlockStateProviderType<?> blockstateprovidertype = Registry.BLOCK_STATE_PROVIDER_TYPE.get(new Identifier(data.get("trunk_provider").get("type").asString().orElseThrow(RuntimeException::new)));
       BlockStateProviderType<?> blockstateprovidertype1 = Registry.BLOCK_STATE_PROVIDER_TYPE.get(new Identifier(data.get("leaves_provider").get("type").asString().orElseThrow(RuntimeException::new)));
@@ -45,11 +55,16 @@
       }), data.get("base_height").asInt(0));
    }
 
+   public static <T> TreeFeatureConfig deserializeJungle(Dynamic<T> data) {
+      return deserialize(data).setSapling((net.minecraftforge.common.IPlantable)net.minecraft.block.Blocks.JUNGLE_SAPLING);
+   }
+
    public static class Builder {
       public final BlockStateProvider trunkProvider;
       public final BlockStateProvider leavesProvider;
       private List<TreeDecorator> decorators = Lists.newArrayList();
       private int baseHeight = 0;
+      protected net.minecraftforge.common.IPlantable sapling = (net.minecraftforge.common.IPlantable)net.minecraft.block.Blocks.OAK_SAPLING;
 
       public Builder(BlockStateProvider trunkProviderIn, BlockStateProvider leavesProviderIn) {
          this.trunkProvider = trunkProviderIn;
@@ -61,8 +76,13 @@
          return this;
       }
 
+      public TreeFeatureConfig.Builder setSapling(net.minecraftforge.common.IPlantable value) {
+         this.sapling = value;
+         return this;
+      }
+
       public TreeFeatureConfig build() {
-         return new TreeFeatureConfig(this.trunkProvider, this.leavesProvider, this.decorators, this.baseHeight);
+         return new TreeFeatureConfig(this.trunkProvider, this.leavesProvider, this.decorators, this.baseHeight).setSapling(sapling);
       }
    }
 }
